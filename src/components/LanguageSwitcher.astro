---
import {
  getLocaleFlag,
  getLocaleLabel,
  resolveLocaleDefinition,
} from '@config/locales';

interface LanguageOption {
  code: string;
  label: string;
  displayLabel: string;
  href: string;
  isActive: boolean;
  isAvailable: boolean;
}

interface LanguageSwitcherProps {
  lang: string;
  options: LanguageOption[];
  variant?: 'desktop' | 'mobile';
}

const {
  lang,
  options,
  variant = 'desktop',
}: LanguageSwitcherProps = Astro.props;

const activeLocale = resolveLocaleDefinition(lang);
const normalizedLang = activeLocale.code;

const defaultOption: LanguageOption = {
  code: normalizedLang,
  label: getLocaleLabel(normalizedLang),
  displayLabel: getLocaleFlag(normalizedLang),
  href: '/',
  isActive: true,
  isAvailable: true,
};

const mapOptionToLocaleMetadata = (option: LanguageOption): LanguageOption => {
  const definition = resolveLocaleDefinition(option.code);

  return {
    ...option,
    code: definition.code,
    label: option.label ?? getLocaleLabel(definition.code),
    displayLabel: option.displayLabel ?? getLocaleFlag(definition.code),
  };
};

const normalizedOptions = (options.length ? options : [defaultOption]).map(mapOptionToLocaleMetadata);

const currentOption =
  normalizedOptions.find((option) => option.isActive) ??
  normalizedOptions[0] ??
  defaultOption;

const currentLanguageName = currentOption.label;
const toggleAriaLabel = `Change language, current ${currentLanguageName}`;
---
<div
  class:list={{
    'language-switcher': true,
    'language-switcher--mobile': variant === 'mobile',
  }}
  data-current-language={currentOption.code}
>
  <button
    type="button"
    class="language-switcher__toggle"
    aria-haspopup="listbox"
    aria-expanded="false"
    aria-label={toggleAriaLabel}
    title={currentLanguageName}
  >
    <span class="language-switcher__label" aria-hidden="true">{currentOption.displayLabel}</span>
    <span class="language-switcher__label-text">{currentOption.label}</span>
  </button>
  <ul class="language-switcher__menu" role="listbox" hidden>
    {normalizedOptions.map((option) => (
      <li role="none">
        <a
          role="option"
          data-lang={option.code}
          class:list={{
            'language-switcher__item': true,
            'is-active': option.isActive,
          }}
          aria-selected={option.isActive}
          href={option.href}
          data-available={option.isAvailable ? 'true' : 'false'}
          aria-label={`Switch language to ${option.label}`}
          title={option.isAvailable ? option.label : 'Opens language home'}
        >
          <span class="language-switcher__item-flag" aria-hidden="true">{option.displayLabel}</span>
          <span class="language-switcher__item-label">{option.label}</span>
          {!option.isAvailable && (
            <span class="language-switcher__item-hint" aria-hidden="true">â†º</span>
          )}
        </a>
      </li>
    ))}
  </ul>
</div>
