---
import {
  getCategoryConfig,
  getEnabledCategoryIds,
  getPosts,
  getPostCategory,
  getCategoryPath,
} from '@lib/content';
import { DEFAULT_LOCALE } from '@lib/language';
import { ensureTrailingSlash } from '@utils/url';
import { getLangFromUrl, useTranslatedPath } from '@i18n/utils';

const lang = getLangFromUrl(Astro.url);
const translatePath = useTranslatedPath(lang);

const posts = await getPosts({ lang });
const counts = posts.reduce<Record<string, number>>((acc, post) => {
  const category = getPostCategory(post);
  acc[category] = (acc[category] ?? 0) + 1;
  return acc;
}, {});

const links = getEnabledCategoryIds()
  .map((key) => {
    const config = getCategoryConfig(key);
    if (!config) {
      return null;
    }

    return {
      key,
      href: translatePath(getCategoryPath(key)),
      label: config.label?.[lang] ?? config.label?.[DEFAULT_LOCALE] ?? key,
      count: counts[key] ?? 0,
    };
  })
  .filter((link): link is NonNullable<typeof link> => Boolean(link && link.count > 0));

const currentPath = ensureTrailingSlash(Astro.url.pathname);
---
<div class="tags__list">
  {links.map((link) => (
    <a href={link.href} data-active={link.href === currentPath ? 'true' : 'false'}>{link.label} ({link.count})</a>
  ))}
</div>
